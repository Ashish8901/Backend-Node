{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample RevanaTech server",
    "version": "1.0.6",
    "title": "RevanaTech Blogs",
    "termsOfService": "http://RevanaTech.com/terms/",
    "contact": {
      "email": "support@RevanaTech.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:4000",

  "tags": [
    {
      "name": "Blog",
      "description": "Everything about your Blogs",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://RevanaTech.com"
      }
    },
    {
      "name": "Category",
      "description": "Everything about your category"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "resume",
      "description": "Operations about Resume Upload"
    },
    {
      "name": "contact",
      "description": "Operations about Resume Upload"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/post/getposts": {
      "get": {
        "tags": ["Blog"],
        "summary": "Finds blog ",

        "produces": ["application/json", "application/xml"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Blog"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/post/getsinglepost/{slug}": {
      "get": {
        "tags": ["Blog"],
        "summary": "Find Blog by slug",
        "description": "Returns a single Blog",

        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of Blog to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          },
          "400": {
            "description": "Invalid slug supplied"
          },
          "404": {
            "description": "Slug not found"
          }
        }
      }
    },

    "/post/updatepost/{id}": {
      "patch": {
        "tags": ["Blog"],
        "summary": "Updates a Blog in the DB with form data",

        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated fields of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/post/deletepost/{id}": {
      "patch": {
        "tags": ["Blog"],
        "summary": "Deletes a Blog in the DB with form data",

        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of blog that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },

    "/post/create": {
      "post": {
        "tags": ["Blog"],
        "summary": "Create a Blog in the DB with form data",

        "consumes": ["multipart/form-data"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "formData",
            "name": "photo",

            "description": "Create Blog Here",
            "required": true,
            "type": "file"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create Blog Here",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/category/getcategory": {
      "get": {
        "tags": ["Category"],
        "summary": "Finds blog ",

        "produces": ["application/json", "application/xml"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Blog"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/category/getcategory/{id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Find Category by id",
        "description": "Returns a single Category",

        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of Category to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "ID not found"
          }
        }
      }
    },

    "/category/updatecategory/{id}": {
      "patch": {
        "tags": ["Category"],
        "summary": "Updates a Blog in the DB with form data",

        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Insert data to be update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/category/delcategory/{id}": {
      "delete": {
        "tags": ["Category"],
        "summary": "Updates a Blog in the DB with form data",

        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the pet",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/category/postcategory/": {
      "post": {
        "tags": ["Category"],
        "summary": "Updates a Blog in the DB with form data",

        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json", "application/xml"],
        "parameters": [],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/user/login": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },

    "/user/contact": {
      "post": {
        "tags": ["contact"],
        "summary": "Contact to Admin",

        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/forgotpassword": {
      "post": {
        "tags": ["user"],
        "summary": "Api to forgot password",

        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/resetpassword": {
      "put": {
        "tags": ["user"],
        "summary": "Api to Reset Password",

        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/changepassword": {
      "patch": {
        "tags": ["user"],
        "summary": "Change your password",

        "consumes": ["application/json"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },

  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "SEOtitle": {
          "type": "string"
        },
        "SEOdescription": {
          "type": "string"
        },

        "SEOkeywords": {
          "type": "string",
          "format": "array"
        }
      }
    },

    "Blog": {
      "type": "object",

      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "SEOtitle": {
          "type": "string"
        },

        "SEOdescription": {
          "type": "string"
        },

        "SEOkeywords": {
          "type": "string"
        },

        "photo": {
          "type": "string",
          "format": "binary"
        },
        "status": {
          "type": "string",
          "default": "Draft",
          "enum": ["Publish", "Draft", "Deleted"]
        }
      }
    },
    "Resume": {
      "type": "object",
      "properties": {
        "fname": {
          "type": "string"
        },
        "lname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "resume": {
          "type": "string"
        },
        "jobRole": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "DOB": { "type": "Date" }
      }
    },

    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },

    "user": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "Number"
        },
        "role": {
          "type": "string",
          "default": "admin"
        },
        "otp": {
          "value": { "type": "string" },
          "expire": { "type": "Date" }
        },
        "xml": {
          "name": "User"
        }
      }
    }
  }
}
